[tox]
no_package = True
skip_missing_interpreters = True
env_list = format, lint, unit
min_version = 4.0.0

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
;lib_path = {tox_root}/lib/charms/operator_name_with_underscores
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=pdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:format]
description = Apply coding style standards to code
deps = -r {tox_root}/requirements-dev.txt
commands =
    licenseheaders -t {tox_root}/.copyright.tmpl -cy -o 'Canonical, Ltd' -d {[vars]src_path} -d {[vars]tests_path}
    isort {[vars]all_path} --profile=black
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps = -r {tox_root}/requirements-dev.txt
commands =
    # if this charm owns a lib, uncomment "lib_path" variable
    # and uncomment the following line
    # codespell {[vars]lib_path}
    codespell {tox_root}
    flake8 {[vars]all_path}
    licenseheaders -t {tox_root}/.copyright.tmpl -cy -o 'Canonical, Ltd' -d {[vars]src_path} -d {[vars]tests_path} --dry
    isort {[vars]all_path} --profile=black --check
    black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    -r {tox_root}/requirements-test.txt
    -r {tox_root}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
                 -m pytest \
                 --tb native \
                 -v \
                 -s \
                 {posargs} \
                 {[vars]tests_path}/unit
    coverage report

[testenv:integration-2.9]
description = Run integration tests
deps =
    -r {tox_root}/requirements.txt
    -r {tox_root}/requirements-test.txt
    juju<3.0
commands =
    pytest -v \
           -s \
           --tb native \
           --log-file-level DEBUG \
           --log-file pytest.log \
           --disable-warnings \
           {posargs} \
           {[vars]tests_path}/integration
pass_env =
    MK8S_*

[testenv:integration-3.1]
description = Run integration tests
deps =
    -r {tox_root}/requirements.txt
    -r {tox_root}/requirements-test.txt
    juju<3.2
commands =
    pytest -v \
           -s \
           --tb native \
           --log-file-level DEBUG \
           --log-file pytest.log \
           --disable-warnings \
           {posargs} \
           {[vars]tests_path}/integration
pass_env =
    MK8S_*


[flake8]
max-line-length = 120
select = E,W,F,C,N
ignore = W503
exclude = venv,.git,.tox,.tox_env,.venv,build,dist,*.egg_info
show-source = true
