options:
  channel:
    type: string
    default: "auto"
    description: |
      Snap channel to install MicroK8s from. Use 'auto' to use the channel the snap defaults to.
  addons:
    description: A space-separated list of addons that should be enabled.
    type: string
    default: dns ingress
  containerd_http_proxy:
    description: |
      Set an HTTP proxy to be used by containerd to pull images from image registries. This is
      useful when deploying the charm on a constrained environment.
      Example: "http://squid.internal:3128"
    default: ""
    type: string
  containerd_https_proxy:
    description: |
      Set an HTTPS proxy to be used by containerd to pull images from image registries. This is
      useful when deploying the charm on a constrained environment.
      Example: "http://squid.internal:3128"
    default: ""
    type: string
  containerd_no_proxy:
    description: |
      When configuring an HTTP/HTTPS proxy for containerd, specify the list of IP ranges to exclude.
      Example: "127.0.0.1,10.0.0.0/8,192.168.0.0/16,172.16.0.0/12"
    default: ""
    type: string
  custom_registries:
    type: string
    default: "[]"
    description: |+
      Registry endpoints and credentials. Setting this config allows containerd
      to pull images from registries where auth is required.

      The value for this config must be a JSON array of credential objects, like this:
        e.g.: [{"url": "https://registry.example.com", "host": "my.registry:port", "username": "user", "password": "pass"}]

      Credential Object Parameters:
      url: REQUIRED str
        the URL to the registry, include the port if not it isn't implied from the schema.
          e.g: "url": "https://my.registry:8443"
          e.g: "url": "http://my.registry"

      host: OPTIONAL str - defaults to auto-generated from the url
        could be registry host address or a name
          e.g.: myregistry.io:9000, 10.10.10.10:5432
          e.g.: myregistry.io, myregistry
        Note: It will be derived from `url` if not provided.
          e.g.: "url": "http://10.10.10.10:8000" --> "host": "10.10.10.10:8000"

      username: OPTIONAL str - default ''
      password: OPTIONAL str - default ''
        Used by containerd for basic authentication to the registry.

      ca_file: OPTIONAL str - default ''
      cert_file: OPTIONAL str - default ''
      key_file: OPTIONAL str - default ''
        For ssl/tls communication these should be a base64 encoded file
        e.g.:  "ca_file": "'"$(base64 -w 0 < my.custom.registry.pem)"'"

      insecure_skip_verify: OPTIONAL bool - default false
        For situatations where the registry has self-signed or expired certs and a quick work-around is necessary.
        e.g.: "insecure_skip_verify": true

      example config)
      juju config containerd custom_registries='[{
          "url": "https://registry.example.com",
          "ca_file": "'"$(base64 -w 0 < ~/my.custom.ca.pem)"'",
          "cert_file": "'"$(base64 -w 0 < ~/my.custom.cert.pem)"'",
          "key_file": "'"$(base64 -w 0 < ~/my.custom.key.pem)"'",
      }]'

  coredns_config:
    description: The CoreDNS configuration.  If you're running on a restricted network, you may wish to change the forwaders.
    type: string

  manage_etc_hosts:
    description: >
      When set, add node IPs to /etc/hosts. Use this if the substrate does not provide DNS.
    type: boolean
    default: false

  skip_verify:
    description: >
      When set, MicroK8s nodes will use the --skip-verify flag when joining the cluster.
      This is not recommended for production systems.
    type: boolean
    default: False

  csr_conf_template:
    description: >
      Configuration for the csr.conf.template. Can be used to add IP and DNS SANs.
      %UNIT_PRIVATE_ADDRESS% and %UNIT_PUBLIC_ADDRESS% will be replaced by Juju to
      match the private and public address for each unit.

      If empty, then Juju will not manage the file.
    type: string
    default: |
      # This file is managed by Juju. Manual changes may be lost at any time.

      [ req ]
      default_bits = 2048
      prompt = no
      default_md = sha256
      req_extensions = req_ext
      distinguished_name = dn

      [ dn ]
      C = GB
      ST = Canonical
      L = Canonical
      O = Canonical
      OU = Canonical
      CN = 127.0.0.1

      [ req_ext ]
      subjectAltName = @alt_names

      [ alt_names ]
      DNS.1 = kubernetes
      DNS.2 = kubernetes.default
      DNS.3 = kubernetes.default.svc
      DNS.4 = kubernetes.default.svc.cluster
      DNS.5 = kubernetes.default.svc.cluster.local
      IP.1 = 127.0.0.1
      IP.2 = 10.152.183.1
      #MOREIPS
      IP.unit-private-address = %UNIT_PRIVATE_ADDRESS%
      IP.unit-public-address = %UNIT_PUBLIC_ADDRESS%

      [ v3_ext ]
      authorityKeyIdentifier=keyid,issuer:always
      basicConstraints=CA:FALSE
      keyUsage=keyEncipherment,dataEncipherment,digitalSignature
      extendedKeyUsage=serverAuth,clientAuth
      subjectAltName=@alt_names

  disable_cert_reissue:
    description: >
      Disable certificate reissue.
    type: boolean
    default: False
